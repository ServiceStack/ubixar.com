# Name of your application. Used to uniquely configure containers.
service: ubixar

# Name of the container image.
image: servicestack/ubixar.com

# Required for use of ASP.NET Core with Kamal-Proxy.
env:
  clear:
    ASPNETCORE_FORWARDEDHEADERS_ENABLED: true

# Deploy to these servers.
servers:
  # IP address of server, optionally use env variable.
  web:
    - 5.78.128.205
#   - <%= ENV['KAMAL_DEPLOY_IP'] %>


# Enable SSL auto certification via Let's Encrypt (and allow for multiple apps on one server).
# If using something like Cloudflare, it is recommended to set encryption mode
# in Cloudflare's SSL/TLS setting to "Full" to enable end-to-end encryption.
proxy:
  ssl: true
  host: ubixar.com
  # kamal-proxy connects to your container over port 80, use `app_port` to specify a different port.
  app_port: 8080

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  server: ghcr.io
  username:
    - KAMAL_REGISTRY_USERNAME

  # Always use an access token rather than real password (pulled from .kamal/secrets).
  password:
    - KAMAL_REGISTRY_PASSWORD

# Configure builder setup.
builder:
  arch: amd64

volumes:
  - "/opt/docker/ubixar.com/App_Data:/app/App_Data"

# Kamal 2 automatically creates and uses the 'kamal' network
# No additional docker options needed for networking

accessories:
  postgres:
    image: postgres
    host: 5.78.128.205
    # Remove port mapping for internal-only access via Kamal network
    # External access can be added later if needed with: port: "5432:5432"
    env:
      clear:
        DB_HOST: 0.0.0.0
        DB_PORT: 5432
      secret:
        - POSTGRES_PASSWORD
    directories:
      - /opt/docker/ubixar.com/postgres:/var/lib/postgresql/data
      - /opt/docker/ubixar.com/initdb.d:/docker-entrypoint-initdb.d